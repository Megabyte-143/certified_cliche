import Head from 'next/head'
import Image from 'next/image'
import Modal from './components/WalletConnect/Modal'
import { useState } from 'react'
import individualLogo from '../public/Individual.png'
import organizationLogo from '../public/organization.png'


export default function Home() {
  const [openModal,setOpenModal]=useState(false)
  const [organization,setOrganization]=useState(false)
  const [individual,setIndividual]=useState(false)
  return (
    <div >
      <Head>
        <title> Certified-Clich√©</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='grid xl:grid-cols-2 xxl:gap-0 lg:gap-0 md:gap-0 lg:grid-cols-2 md:grid-cols-2 col-span-1 '>
        <div className='bg-[#4A3CED] h-[calc(100vh-353px)] grid place-items-center  ' >
        
        <div className=' transform motion-safe:hover:scale-110 ' >
        
            <button onClick={()=>{setOpenModal(true); setOrganization(true)

            }}>
              <Image
                src={organizationLogo}
                width="125.25x"
                height="125.25px"
                
              />
             
            </button>
            
            <div className='text-[#ffffff] font-bold font-sans text-2xl text-center mt-2'>Organization</div>
          </div>
         
        </div>
        <div className=' h-[calc(100vh-353px)]   grid place-items-center'>
          <div className='transform motion-safe:hover:scale-110  '>
          
          <button onClick={()=>{setOpenModal(true); setIndividual(true)}}>
              <Image
                src={individualLogo}
                width="125.25x"
                height="125.25px"
                
                
              />
            </button>
            
            <div className='text-[#4A3CED] font-bold font-sans text-2xl text-center mt-2'>Individual</div>
          </div>
        </div>

      </div>
      {openModal && <Modal org={organization} ind={individual}/>}
    </div> 
    
    
    // For the Mumbai Testnet
    // const provider = new ethers.providers.JsonRpcProvider(rpc_url);

    // For the LocalHost

   // const provider = new ethers.providers.JsonRpcProvider();
    // const provider = new ethers.providers.JsonRpcProvider();

    const tokenContract = new ethers.Contract(nftAddress, NFT.abi, provider);
    const marketContract = new ethers.Contract(nftTransferAddress, NFTTransfer.abi, provider);

    //fetching the certificates from the market contracts
    const data = await marketContract.fetchCertificatesLeft();
    const items = await Promise.all(data.map(async i => {
      //getting the ipfs url of each certificate item
      const tokenUri = await tokenContract.tokenURI(i.tokenId);
      //fetching the ipfs url, which will return a meta json
      const meta = await axios.get(tokenUri);

      let item = {
        tokenId: i.tokenId.toNumber(),
        seller: i.seller,
        owner: i.owner,
        image: meta.data.image,
        name: meta.data.name,
        description: meta.data.description,
      }
      return item;
    }));
    setNfts(items);
    setLoadingState('loaded');
  }

  /**
   * Transfer the nft to a user
   * @param {object} nft Nft which needed to be transferred
   */
  async function transferNFT(nft) {
    const web3Modal = new Web3Modal();
    const connection = await web3Modal.connect();
    const provider = new ethers.providers.Web3Provider(connection);

    const signer = provider.getSigner();
    let contract = new ethers.Contract(nftTransferAddress, NFTTransfer.abi, signer);

  )
}



